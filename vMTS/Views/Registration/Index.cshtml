@using vMTS.Models
@*@model List<Group<string, Class_Schedule_view>>  i.Values.Select(v => v.CLASS_DESCRIPTION).FirstOrDefault()*@

@model Tuple <List<Group<string, Class_Schedule_view>>, List<CourseDescriptions>, List<InstructorClasses>>

@*@model Tuple<List<Group<string, Class_Schedule_view>>, List<CourseDescriptions>>*@

@{
    ViewBag.Title = "Class Registration";
}

@{int classCount = 0;
    string classDescription = @"";
    string minRiders = @"";
    string fees = @"";
    }


<h1>@ViewBag.Title</h1>
@if (Model.Item1.Count >=1)
{
    <table class="table table-striped table-hover ">
        @foreach (var i in Model.Item1)
        {
            <thead>
                <tr class="info">
                    @if (i.Values.Count() >=1)
                    {
                        if (Model.Item2.Count >= 1)
                        {
                            try
                            {
                                classDescription = Model.Item2.Where(x => x.CourseName == i.Key).FirstOrDefault().Description[0].ToString();
                                minRiders = Model.Item2.Where(x => x.CourseName == i.Key).FirstOrDefault().MinRiders;

                            }
                            catch
                            {
                                classDescription = "";
                                minRiders = "Not Specified";
                            }
                        }
                        <th colspan="3" data-trigger="hover" data-container="body" data-toggle="popover" data-placement="top" data-content="@classDescription Requires a minimum of @minRiders riders for class to be held." data-original-title="" title="@i.Key">@i.Key - Class Minimum: @minRiders</th>
                    }
                    else
                    {
                        <th colspan="3"></th>
                    }
                </tr>
                <tr>
                    <th>Course Date(s)</th>
                    @*<th>Primary Instructor</th>
                    <th>Secondary Instructor</th>*@
                    <th>Register Now</th>
                    <th>Class Fee</th>
                </tr>
            </thead>
            foreach (var cl in i.Values)
            {
                <tbody>
                    <tr class="">

                        <td>
                            <div data-trigger="hover" data-container="body" data-toggle="popover" data-placement="right" data-content="Tentative schedule: @cl.CLASS_START_TIME - @cl.CLASS_END_TIME. Arrive 15 minutes prior to class start time to complete paperwork.  The class end time will depend on several factors, but generally it will end by 6:00PM." data-original-title="" title="Class Scheduled Times">@cl.ClassDay</div>
                        </td>
                        @*<td>
            @if (Model.Item3.Count >= 1)
            {
                    @Model.Item3.Where(x => x.ClassDates == cl.ClassDay).FirstOrDefault().PrimaryInstructor.ToString()

            }
        </td>
        <td>
            @if (Model.Item3.Count >= 1)
            {
                @Model.Item3.Where(x => x.ClassDates == cl.ClassDay).FirstOrDefault().SecondaryInstructor.ToString()
            }
        </td>*@
                        <td>
                            @if (cl.OPEN_SEATS <= 0)
                            {
                                <div>Class Full</div>
                            }
                            else
                            {
                                <a href="/Registration/Register/@cl.CLASS_ID" class="btn-sm btn-info" data-trigger="hover" data-toggle="popover" data-placement="right" title="" data-original-title="@cl.ClassDay" data-content="Register now for @cl.CLASS_TYPE. There are only @cl.OPEN_SEATS spots left."><span class="badge">@cl.OPEN_SEATS</span></a>
                            }
                        </td>
                        @if (i.Key != "")
                        {
                            try
                            {
                                fees = Model.Item2.Where(x => x.CourseName == i.Key).FirstOrDefault().FeeStructure;
                            }
                            catch
                            {
                                fees = "N/A";
                            }
                            <td data-trigger="hover" data-container="body" data-toggle="popover" data-placement="left" data-content="@fees" data-original-title="" title="Class Fee Structure">
                                @string.Format("{0:c}", cl.CLASS_FEE)
                            </td>

                        }

                    </tr>
                </tbody>
            }

            classCount++;
        }
    </table>

}
else
{
    <div class="well">
        <h3>Future Class Dates Have Not Been Released</h3>
        <p class="lead">We have not published our course list for future dates.</p>
        <p class="lead">Please check back for updates. Or contact us for more information.</p>

    </div>
}

